# FlexoTwin Smart Maintenance 4.0 - Git Ignore File

# ========================================
# Python
# ========================================

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# ========================================
# Machine Learning & Data Science
# ========================================

# Model files (large binary files)
*.joblib
*.pkl
*.pickle
*.h5
*.hdf5
*.model
*.weights

# Data files (sensitive or large datasets)
*.csv
*.xlsx
*.xls
*.json
*.parquet
*.feather
*.db
*.sqlite

# Checkpoint files
checkpoint/
checkpoints/
*.ckpt

# TensorBoard logs
logs/
runs/

# MLflow
mlruns/
mlartifacts/

# Weights & Biases
wandb/

# ========================================
# Development Tools
# ========================================

# VS Code
.vscode/
*.code-workspace

# PyCharm
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Vim
*.swp
*.swo
*~

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# ========================================
# Operating System
# ========================================

# Windows
Thumbs.db
Thumbs.db:encryptable
ehthumbs.db
ehthumbs_vista.db
*.stackdump
[Dd]esktop.ini
$RECYCLE.BIN/
*.cab
*.msi
*.msix
*.msm
*.msp
*.lnk

# macOS
.DS_Store
.AppleDouble
.LSOverride
Icon
._*
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

# Linux
*~
.fuse_hidden*
.directory
.Trash-*
.nfs*

# ========================================
# Project Specific
# ========================================

# Backup files
*.bak
*.backup
*.old
*.orig

# Temporary files
temp/
tmp/
*.tmp
*.temp

# Log files
*.log
logs/

# API keys and sensitive data
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
config/secrets.py
secrets/
credentials/
*.key
*.pem
*.crt
*.cert

# Large output files
output/
results/
reports/
exports/

# Cache directories
.cache/
cache/
__pycache__/

# ========================================
# Web Development (for frontend integration)
# ========================================

# Node.js (jika ada frontend)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*
.pnpm-debug.log*

# Build outputs
dist/
build/
public/build/

# Static files
static/collected/
media/

# ========================================
# Documentation
# ========================================

# Generated documentation
docs/_build/
site/

# PDF outputs (except important ones)
*.pdf

# ========================================
# Specific to FlexoTwin Project
# ========================================

# Raw data files (keep in separate data repository)
Data/
raw_data/
production_data/
*.xlsx
*.xls

# Generated model outputs
02_Models/*.joblib
02_Models/*.pkl

# Generated visualizations (can be regenerated)
04_Visualizations/*.png
04_Visualizations/*.jpg
04_Visualizations/*.svg

# Processed data (can be regenerated)
03_Data/flexotwin_processed_data.csv
03_Data/flexotwin_maintenance_data.csv
03_Data/flexotwin_model_features.csv

# API logs
05_API/logs/
05_API/*.log

# Test outputs
test_results/
test_outputs/

# Configuration files with sensitive data
config.json
settings.json
database.json

# ========================================
# Keep These Files (Negation Rules)
# ========================================

# Keep important documentation
!README.md
!PROJECT_INDEX.md
!06_Documentation/*.md

# Keep example files
!07_Examples/
!07_Examples/*.js
!07_Examples/*.py

# Keep configuration templates
!config.template.json
!settings.template.json

# Keep small sample data for testing
!sample_data/
!test_data/

# Keep requirements files
!requirements.txt
!environment.yml
!Pipfile

# Keep Docker files
!Dockerfile
!docker-compose.yml
!.dockerignore

# ========================================
# End of .gitignore
# ========================================
